const form = document.getElementById("form");
const resultsDiv = document.getElementById("results");
const productsDiv = document.getElementById("products");

const API_KEY = "Ou0O8bfUG3gscBUflI8yd2zoxYphrbVkppQVBruf";

form.addEventListener("submit", async (e) => {
  e.preventDefault();

  const gender = document.getElementById("gender").value;
  const age = parseInt(document.getElementById("age").value);
  const height = parseFloat(document.getElementById("height").value);
  const weight = parseFloat(document.getElementById("weight").value);

  // üîπ –§–æ—Ä–º—É–ª–∞ –ú–∏—Ñ—Ñ–ª–∏–Ω–∞-–°–∞–Ω –ñ–µ–æ—Ä–∞ (BMR)
  let bmr = gender === "male"
    ? 10 * weight + 6.25 * height - 5 * age + 5
    : 10 * weight + 6.25 * height - 5 * age - 161;

  const calories = bmr * 1.5; // üî∏ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ (–±—É–¥–µ—Ç –∑–∞–º–µ–Ω—ë–Ω –Ω–∞ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π)
  const protein = (calories * 0.30) / 4;
  const fat = (calories * 0.30) / 9;
  const carbs = (calories * 0.40) / 4;

  // üîπ –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏ (–ø–æ –Ω–æ—Ä–º–∞—Ç–∏–≤–∞–º)
  const minProtein = weight * 0.8;     // –≥/–¥–µ–Ω—å –ø–æ WHO/FAO/UNU (2007)
  const minFat = weight * 1.0;         // –≥/–¥–µ–Ω—å –ø–æ WHO/FAO (2010)
  const minCarbs = calories / 10;      // –≥—Ä—É–±–∞—è –æ—Ü–µ–Ω–∫–∞ ‚Äî 10 –∫–∫–∞–ª –Ω–∞ 1 –≥ —É–≥–ª–µ–≤–æ–¥–æ–≤

  resultsDiv.innerHTML = `
    <h2>–¶–µ–ª–µ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è</h2>
    <p>–ö–∞–ª–æ—Ä–∏–∏: ${calories.toFixed(0)} –∫–∫–∞–ª</p>
    <p>–ë–µ–ª–∫–∏: ${protein.toFixed(1)} –≥, –ñ–∏—Ä—ã: ${fat.toFixed(1)} –≥, –£–≥–ª–µ–≤–æ–¥—ã: ${carbs.toFixed(1)} –≥</p>

    <h3>–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏ –≤ –Ω—É—Ç—Ä–∏–µ–Ω—Ç–∞—Ö (–ø–æ WHO/FAO/UNU, NASEM –∏ –¥—Ä.)</h3>
    <p>–ë–µ–ª–∫–∏: ${minProtein.toFixed(1)} –≥</p>
    <p>–ñ–∏—Ä—ã: ${minFat.toFixed(1)} –≥</p>
    <p>–£–≥–ª–µ–≤–æ–¥—ã: ${minCarbs.toFixed(1)} –≥</p>
  `;

  await fetchFoodsForNutrients();
});

// üü© –ü–µ—Ä–µ–≤–æ–¥—ã –Ω–∞–∑–≤–∞–Ω–∏–π –Ω—É—Ç—Ä–∏–µ–Ω—Ç–æ–≤
const nutrientTranslations = {
  "protein": "–ë–µ–ª–æ–∫",
  "iron": "–ñ–µ–ª–µ–∑–æ",
  "vitamin D": "–í–∏—Ç–∞–º–∏–Ω D",
  "alpha-linolenic acid": "–ê–ª—å—Ñ–∞-–ª–∏–Ω–æ–ª–µ–Ω–æ–≤–∞—è –∫–∏—Å–ª–æ—Ç–∞ (ALA)",
  "linoleic acid": "–õ–∏–Ω–æ–ª–µ–≤–∞—è –∫–∏—Å–ª–æ—Ç–∞ (LA)",
  "eicosapentaenoic acid": "–≠–π–∫–æ–∑–∞–ø–µ–Ω—Ç–∞–µ–Ω–æ–≤–∞—è –∫–∏—Å–ª–æ—Ç–∞ (EPA)",
  "docosahexaenoic acid": "–î–æ–∫–æ–∑–∞–≥–µ–∫—Å–∞–µ–Ω–æ–≤–∞—è –∫–∏—Å–ª–æ—Ç–∞ (DHA)"
};

// üîÑ –ü–æ–∏—Å–∫ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –ø–æ –Ω–µ—Å–∫–æ–ª—å–∫–∏–º –∫–ª—é—á–µ–≤—ã–º –Ω—É—Ç—Ä–∏–µ–Ω—Ç–∞–º
async function fetchFoodsForNutrients() {
  const nutrients = Object.keys(nutrientTranslations);
  productsDiv.innerHTML = "<p>–ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤...</p>";

  let html = "<h3>–†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã –ø–æ –∑–Ω–∞—á–∏–º—ã–º –Ω—É—Ç—Ä–∏–µ–Ω—Ç–∞–º:</h3><ul>";

  for (const nutrient of nutrients) {
    const url = `https://api.nal.usda.gov/fdc/v1/foods/search?query=${encodeURIComponent(nutrient)}&pageSize=3&api_key=${API_KEY}`;
    try {
      const response = await fetch(url);
      const data = await response.json();

      if (data.foods && data.foods.length > 0) {
        html += `<li><strong>${nutrientTranslations[nutrient]}</strong>:<ul>`;
        data.foods.forEach(food => {
          html += `<li>${food.description}</li>`;
        });
        html += `</ul></li>`;
      } else {
        html += `<li><strong>${nutrientTranslations[nutrient]}</strong>: –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö</li>`;
      }
    } catch (error) {
      html += `<li><strong>${nutrientTranslations[nutrient]}</strong>: –æ—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏</li>`;
      console.error(`‚ùå –û—à–∏–±–∫–∞ –¥–ª—è ${nutrient}:`, error);
    }
  }

  html += "</ul>";
  productsDiv.innerHTML = html;
}
