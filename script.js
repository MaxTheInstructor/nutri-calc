const nutrientTranslations = {
  "protein": "–ë–µ–ª–∫–∏",
  "iron": "–ñ–µ–ª–µ–∑–æ",
  "vitamin D": "–í–∏—Ç–∞–º–∏–Ω D",
  "alpha-linolenic acid": "–ê–ª—å—Ñ–∞-–ª–∏–Ω–æ–ª–µ–Ω–æ–≤–∞—è –∫–∏—Å–ª–æ—Ç–∞ (ALA)",
  "linoleic acid": "–õ–∏–Ω–æ–ª–µ–≤–∞—è –∫–∏—Å–ª–æ—Ç–∞ (LA)",
  "eicosapentaenoic acid": "–≠–π–∫–æ–∑–∞–ø–µ–Ω—Ç–∞–µ–Ω–æ–≤–∞—è –∫–∏—Å–ª–æ—Ç–∞ (EPA)",
  "docosahexaenoic acid": "–î–æ–∫–æ–∑–∞–≥–µ–∫—Å–∞–µ–Ω–æ–≤–∞—è –∫–∏—Å–ª–æ—Ç–∞ (DHA)"
};


const form = document.getElementById("form");
const resultsDiv = document.getElementById("results");
const productsDiv = document.getElementById("products");

const API_KEY = "Ou0O8bfUG3gscBUflI8yd2zoxYphrbVkppQVBruf"; // ‚Üê —Å—é–¥–∞ –≤—Å—Ç–∞–≤—å —Å–≤–æ–π –∫–ª—é—á –æ—Ç FDC

form.addEventListener("submit", async (e) => {
  e.preventDefault();

  const gender = document.getElementById("gender").value;
  const age = parseInt(document.getElementById("age").value);
  const height = parseFloat(document.getElementById("height").value);
  const weight = parseFloat(document.getElementById("weight").value);

  // –§–æ—Ä–º—É–ª–∞ –ú–∏—Ñ—Ñ–ª–∏–Ω–∞-–°–∞–Ω –ñ–µ–æ—Ä–∞ (BMR)
  let bmr = gender === "male"
    ? 10 * weight + 6.25 * height - 5 * age + 5
    : 10 * weight + 6.25 * height - 5 * age - 161;

  const activityFactor = parseFloat(document.getElementById("activity").value);
const calories = bmr * activityFactor;

  const protein = (calories * 0.30) / 4;
  const fat = (calories * 0.30) / 9;
  const carbs = (calories * 0.40) / 4;

  resultsDiv.innerHTML = `
    <h2>–¶–µ–ª–µ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è</h2>
    <p>–ö–∞–ª–æ—Ä–∏–∏: ${calories.toFixed(0)} –∫–∫–∞–ª</p>
    <p>–ë–µ–ª–∫–∏: ${protein.toFixed(1)} –≥, –ñ–∏—Ä—ã: ${fat.toFixed(1)} –≥, –£–≥–ª–µ–≤–æ–¥—ã: ${carbs.toFixed(1)} –≥</p>
  `;

  await fetchFoodsForNutrients();
});

const minProtein = weight * 0.8;
const minFat = weight * 1.0;
const minCarbs = calories / 10;

resultsDiv.innerHTML += `
  <h3>–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏ –≤ –Ω—É—Ç—Ä–∏–µ–Ω—Ç–∞—Ö (–ø–æ WHO/FAO/UNU (2007), WHO/FAO (2010), US DRI (NASEM))</h3>
  <p>–ë–µ–ª–∫–∏: ${minProtein.toFixed(1)} –≥</p>
  <p>–ñ–∏—Ä—ã: ${minFat.toFixed(1)} –≥</p>
  <p>–£–≥–ª–µ–≤–æ–¥—ã: ${minCarbs.toFixed(1)} –≥</p>
`;


// üîÑ –ù–æ–≤—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –∑–∞–ø—Ä–æ—Å–∞ –ø–æ –∫–ª—é—á–µ–≤—ã–º –Ω—É—Ç—Ä–∏–µ–Ω—Ç–∞–º
async function fetchFoodsForNutrients() {
  const nutrients = [
    "protein",
    "iron",
    "vitamin D",
    "alpha-linolenic acid",  // ALA
    "linoleic acid",         // LA
    "eicosapentaenoic acid", // EPA
    "docosahexaenoic acid"   // DHA
  ];

  productsDiv.innerHTML = "<p>–ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤...</p>";

  let html = "<h3>–†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã –ø–æ –∑–Ω–∞—á–∏–º—ã–º –Ω—É—Ç—Ä–∏–µ–Ω—Ç–∞–º:</h3><ul>";

  for (const nutrient of nutrients) {
    const url = `https://api.nal.usda.gov/fdc/v1/foods/search?query=${encodeURIComponent(nutrient)}&pageSize=3&api_key=${API_KEY}`;
    try {
      const response = await fetch(url);
      const data = await response.json();

      if (data.foods && data.foods.length > 0) {
        const translated = nutrientTranslations[nutrient] || nutrient;
        html += `<li><strong>${translated}</strong>:<ul>`;
        data.foods.forEach(food => {
          html += `<li>${food.description}</li>`;
        });
        html += `</ul></li>`;
      } else {
        html += `<li><strong>${nutrient}</strong>: –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö</li>`;
      }
    } catch (error) {
      html += `<li><strong>${nutrient}</strong>: –æ—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏</li>`;
      console.error(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–ª—è ${nutrient}:`, error);
    }
  }

  html += "</ul>";
  productsDiv.innerHTML = html;
}