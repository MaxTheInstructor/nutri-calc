const form = document.getElementById("form");
const resultsDiv = document.getElementById("results");
const productsDiv = document.getElementById("products");

const API_KEY = "Ou0O8bfUG3gscBUflI8yd2zoxYphrbVkppQVBruf";

// –°–ª–æ–≤–∞—Ä—å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã—Ö –Ω—É—Ç—Ä–∏–µ–Ω—Ç–æ–≤ —Å –ø–µ—Ä–µ–≤–æ–¥–∞–º–∏ –∏ —Å—É—Ç–æ—á–Ω—ã–º–∏ –Ω–æ—Ä–º–∞–º–∏ (–º–æ–∂–Ω–æ –ø–æ–¥–∫–ª—é—á–∞—Ç—å –∏–∑ JSON)
const nutrientNeeds = {
  "protein": { label: "–ë–µ–ª–æ–∫", unit: "–≥", daily: 48 },
  "fat": { label: "–ñ–∏—Ä—ã", unit: "–≥", daily: 60 },
  "carbohydrate": { label: "–£–≥–ª–µ–≤–æ–¥—ã", unit: "–≥", daily: 210 },
  "iron": { label: "–ñ–µ–ª–µ–∑–æ", unit: "–º–≥", daily: 18 },
  "vitamin d": { label: "–í–∏—Ç–∞–º–∏–Ω D", unit: "–º–∫–≥", daily: 15 },
  "alpha-linolenic acid": { label: "–ê–ª—å—Ñ–∞-–ª–∏–Ω–æ–ª–µ–Ω–æ–≤–∞—è –∫–∏—Å–ª–æ—Ç–∞ (ALA)", unit: "–≥", daily: 1.1 },
  "linoleic acid": { label: "–õ–∏–Ω–æ–ª–µ–≤–∞—è –∫–∏—Å–ª–æ—Ç–∞ (LA)", unit: "–≥", daily: 11 },
  "eicosapentaenoic acid": { label: "–≠–π–∫–æ–∑–∞–ø–µ–Ω—Ç–∞–µ–Ω–æ–≤–∞—è –∫–∏—Å–ª–æ—Ç–∞ (EPA)", unit: "–≥", daily: 0.25 },
  "docosahexaenoic acid": { label: "–î–æ–∫–æ–∑–∞–≥–µ–∫—Å–∞–µ–Ω–æ–≤–∞—è –∫–∏—Å–ª–æ—Ç–∞ (DHA)", unit: "–≥", daily: 0.25 }
};

form.addEventListener("submit", async (e) => {
  e.preventDefault();

  const gender = document.getElementById("gender").value;
  const age = parseInt(document.getElementById("age").value);
  const height = parseFloat(document.getElementById("height").value);
  const weight = parseFloat(document.getElementById("weight").value);

  // –§–æ—Ä–º—É–ª–∞ –ú–∏—Ñ—Ñ–ª–∏–Ω–∞-–°–∞–Ω –ñ–µ–æ—Ä–∞ (BMR)
  const bmr = gender === "male"
    ? 10 * weight + 6.25 * height - 5 * age + 5
    : 10 * weight + 6.25 * height - 5 * age - 161;

  const calories = bmr * 1.5; // —É–º–µ—Ä–µ–Ω–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
  const protein = (calories * 0.30) / 4;
  const fat = (calories * 0.30) / 9;
  const carbs = (calories * 0.40) / 4;

  resultsDiv.innerHTML = `
    <h2>–¶–µ–ª–µ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è</h2>
    <p>–ö–∞–ª–æ—Ä–∏–∏: ${calories.toFixed(0)} –∫–∫–∞–ª</p>
    <p>–ë–µ–ª–∫–∏: ${protein.toFixed(1)} –≥, –ñ–∏—Ä—ã: ${fat.toFixed(1)} –≥, –£–≥–ª–µ–≤–æ–¥—ã: ${carbs.toFixed(1)} –≥</p>
    <h3>–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏ –≤ –Ω—É—Ç—Ä–∏–µ–Ω—Ç–∞—Ö (–ø–æ WHO/FAO/UNU, WHO/FAO, NASEM)</h3>
    <ul>
      <li>–ë–µ–ª–∫–∏: 48.0 –≥</li>
      <li>–ñ–∏—Ä—ã: 60.0 –≥</li>
      <li>–£–≥–ª–µ–≤–æ–¥—ã: 210.0 –≥</li>
    </ul>
  `;

  await fetchAndDisplayRecommendedFoods();
});

async function fetchAndDisplayRecommendedFoods() {
  productsDiv.innerHTML = "<p>–ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤...</p>";
  let html = "<h3>–†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã –ø–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–º –Ω—É—Ç—Ä–∏–µ–Ω—Ç–∞–º:</h3><ul>";

  for (const nutrient in nutrientNeeds) {
    const label = nutrientNeeds[nutrient].label;
    const dailyNeed = nutrientNeeds[nutrient].daily;
    const unit = nutrientNeeds[nutrient].unit;

    try {
      // üîç –ü–æ–∏—Å–∫ –æ–¥–Ω–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞ –ø–æ –Ω—É—Ç—Ä–∏–µ–Ω—Ç—É
      const searchUrl = `https://api.nal.usda.gov/fdc/v1/foods/search?query=${encodeURIComponent(nutrient)}&pageSize=1&api_key=${API_KEY}`;
      const searchResponse = await fetch(searchUrl);
      const searchData = await searchResponse.json();

      if (!searchData.foods || searchData.foods.length === 0) {
        html += `<li><strong>${label}</strong>: –ø—Ä–æ–¥—É–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω</li>`;
        continue;
      }

      const food = searchData.foods[0];
      const fdcId = food.fdcId;

      // üì¶ –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ—Å—Ç–∞–≤–∞ –ø—Ä–æ–¥—É–∫—Ç–∞
      const detailUrl = `https://api.nal.usda.gov/fdc/v1/food/${fdcId}?api_key=${API_KEY}`;
      const detailResponse = await fetch(detailUrl);
      const foodDetails = await detailResponse.json();

      const foundNutrient = foodDetails.foodNutrients.find(n =>
        n.nutrientName.toLowerCase().includes(nutrient.toLowerCase())
      );

      if (!foundNutrient || !foundNutrient.value) {
        html += `<li><strong>${label}</strong>: –Ω–µ –Ω–∞–π–¥–µ–Ω–æ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –≤ –ø—Ä–æ–¥—É–∫—Ç–µ (${food.description})</li>`;
        continue;
      }

      const valuePer100g = foundNutrient.value;
      const amountNeeded = (dailyNeed / valuePer100g) * 100;

      html += `
        <li><strong>${label}</strong>:
          <ul>
            <li>–ü—Ä–æ–¥—É–∫—Ç: <em>${food.description}</em></li>
            <li>–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –≤ 100 –≥: ${valuePer100g} ${unit}</li>
            <li>–ù–µ–æ–±—Ö–æ–¥–∏–º–æ: <strong>${amountNeeded.toFixed(1)} –≥</strong></li>
          </ul>
        </li>
      `;
    } catch (error) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –¥–ª—è ${label}:`, error);
      html += `<li><strong>${label}</strong>: –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ</li>`;
    }
  }

  html += "</ul>";
  productsDiv.innerHTML = html;
}
